# =====================================================
# üåâ Docker Compose ‚Äì Kong Gateway (DB mode) + Konga UI
# =====================================================

networks:
  kong-net:
    driver: bridge

volumes:
  kong_data:      # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ê‡∏≤‡∏ô Kong (PostgreSQL)
  konga_data:     # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ê‡∏≤‡∏ô Konga (PostgreSQL)

services:

  # =====================================================
  # ü¶ç Kong Gateway (DB mode)
  # =====================================================
  kong:
    image: kong:3.4
    container_name: kong-gateway
    networks: [kong-net]
    environment:
      # -------------------------------
      # Database connection (PostgreSQL)
      # -------------------------------
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong

      # -------------------------------
      # Performance / Logging
      # -------------------------------
      KONG_PG_TIMEOUT: 10000
      KONG_PG_POOL_SIZE: 5
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr

      # -------------------------------
      # Ports
      # -------------------------------
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
    ports:
      - "8000:8000"   # Proxy Port
      - "8001:8001"   # Admin API Port
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migrations:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =====================================================
  # ‚öôÔ∏è Kong Migrations (‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°)
  # =====================================================
  kong-migrations:
    image: kong:3.4
    container_name: kong-migrations
    networks: [kong-net]
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    command: >
      /bin/sh -lc "
        kong migrations bootstrap &&
        kong migrations up &&
        kong migrations finish
      "
    depends_on:
      kong-database:
        condition: service_healthy
    restart: "no"

  # =====================================================
  # üóÑÔ∏è PostgreSQL (Kong Gateway Database)
  # =====================================================
  kong-database:
    image: postgres:17
    container_name: kong-database
    networks: [kong-net]
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =====================================================
  # üóÑÔ∏è PostgreSQL (Konga UI Database)
  # =====================================================
  konga-database:
    image: postgres:9.5
    container_name: konga-database
    networks: [kong-net]
    environment:
      POSTGRES_USER: konga
      POSTGRES_DB: konga
      POSTGRES_PASSWORD: konga
    volumes:
      - konga_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U konga"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # =====================================================
  # ‚öôÔ∏è ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ê‡∏≤‡∏ô Konga (‡∏£‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
  # =====================================================
  konga-prepare:
    image: pantsel/konga:latest
    container_name: konga-prepare
    networks: [kong-net]
    command: >
      -c prepare
      -a postgres
      -u postgresql://konga:konga@konga-database:5432/konga
    depends_on:
      konga-database:
        condition: service_healthy
    restart: "no"

  # =====================================================
  # üñ•Ô∏è Konga Admin UI (Web Dashboard)
  # =====================================================
  konga:
    image: pantsel/konga:latest
    container_name: konga
    networks: [kong-net]
    environment:
      NODE_ENV: production
      DB_ADAPTER: postgres
      DB_HOST: konga-database
      DB_PORT: 5432
      DB_USER: konga
      DB_PASSWORD: konga
      DB_DATABASE: konga
      TOKEN_SECRET: some-secret-token-change-this
    ports:
      - "1337:1337"
    depends_on:
      konga-database:
        condition: service_healthy
      konga-prepare:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:1337 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

